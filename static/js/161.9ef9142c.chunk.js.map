{"version":3,"file":"static/js/161.9ef9142c.chunk.js","mappings":"sQAOAA,OAAOC,WAAaC,sBAOpB,MAAMC,EAAW,CACbC,IAAK,yBAA0BC,IAAK,iEAGlCC,GAAoBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBJ,GAAQ,IAAEK,OAAQ,kBAAmBC,eAAgB,WAG5DC,EAAAA,EAAAA,QAAmB,CACfC,QAAS,CACLC,QAASN,EAAsB,kBAAmBA,EAAsB,uBAAqBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtFJ,GAAQ,IAAEK,OAAQ,sBAAuBC,eAAgB,UAC7D,sBAEFF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMJ,GAAQ,IAAEK,OAAQ,qBAAsBC,eAAgBP,aAKhE,MAAMW,EAAO,MAChB,MAAMC,EAAWC,IAAAA,OAAa,CAC1BC,eAAgB,WACZ,OAAO,CACX,IAGJ,OAAQC,GACAA,EAAOC,eAAe,WAAsC,oBAAlBD,EAAOE,OAC1CC,QAAQC,QAAQJ,EAAOE,OAAOG,IAAKL,EAAQ,CAAC,aAAaM,MAAMC,IAAI,CACtEA,KAAM,CACFC,KAAM,EAAGD,YAEbE,OAAOC,IACPC,EAAAA,QAAQC,MAAMF,EAAIC,SAAW,wCACtB,CAACJ,KAAM,CAACC,KAAM,IAAKK,IAAKH,EAAIC,aAGpCd,EAASG,EAEvB,EApBmB,IAuBpBc,EAAAA,EAAAA,QAAY,CACRlB,OACAmB,SAASC,EAAAA,EAAAA,KAACC,EAAAA,KAAI,CAACC,MAAO,IACPC,MAAO,CAACC,SAAU,WAAYC,KAAM,MAAOC,QAAS,OAAQC,UAAW,sBACtFX,MAAO,KACPY,OAAOR,EAAAA,EAAAA,KAACS,EAAAA,MAAK,IACbC,kBAAoBC,IAChB,MAAM,KAACpB,GAAQoB,EAIf,OAHAA,EAASpB,KAAO,CACZC,KAAoB,IAAdD,EAAKC,KAAa,IAAMD,EAAKC,KAAMK,IAAKN,EAAKM,IAAKe,QAASrB,EAAKA,MAEnEoB,CAAQ,I,yGC/DjBE,EAAgBC,IAAAA,cAuBtB,EArBYC,IAAuC,IAAtC,OAAEC,EAAM,WAAEC,GAAsBF,EAAPG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GACzC,OACIpB,EAAAA,EAAAA,KAACqB,EAAAA,WAAU,CAAAC,UACTtB,EAAAA,EAAAA,KAACa,GAAavC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN4C,GAAK,IACTK,MAAO,CACL,CACEC,IAAK,aACLC,KAAM,IACNC,MAAO,iBAGXV,OAAQA,EACRC,WAAYA,EACZU,OAAQA,EAAAA,QACRC,UAAW,CAAEC,KAAM,UAEZ,ECnBNC,EAAAA,WAAoBC,SAASC,eAAe,SAMpDC,QACDjC,EAAAA,EAAAA,KAACkC,IAAAA,WAAgB,CAAAZ,UACftB,EAAAA,EAAAA,KAACmC,EAAG,CAACnB,OAAQ,CAAEpC,KAAK,GAAGqC,WANV,CACjBmB,aAAc,e,gDCPhB,MA2DA,EA3DqB,CACjBC,KAAM,qBACNC,QAAS,27BAOTC,YAAa,2WACbC,YAAa,0BACbC,IAAK,42BAYLC,QAAS,CACLC,QAAQ,EACRC,UAAW,2BACXzC,MAAO,2GAKP0C,KAAM,CAAC,CACXnB,MAAO,mDACPa,YAAa,mDACb/C,KAAM,yWAgBNsD,MAAO,CAAC,CACRT,KAAM,oBACNG,YAAa,sCACbO,gBAAiB,+DACjBC,UAAW,O","sources":["preset.js","App.js","bootstrap.js","../../README.md"],"sourcesContent":["import React from 'react';\nimport {preset as fetchPreset} from '@kne/react-fetch';\nimport {Spin, Empty, message} from 'antd';\nimport axios from 'axios';\nimport {preset as remoteLoaderPreset} from '@kne/remote-loader';\nimport omit from 'lodash/omit';\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\n// url: 'https://registry.npmmirror.com',\n// tpl: '{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build',\n\n// url: 'https://cdn.jsdelivr.net', tpl: '{{url}}/npm/@kne-components/{{remote}}@{{version}}/build'\n\nconst registry = {\n    url: \"https://uc.fatalent.cn\", tpl: \"{{url}}/packages/@kne-components/{{remote}}/{{version}}/build\"\n};\n\nconst componentsCoreRemote = {\n    ...registry, remote: 'components-core', defaultVersion: '0.3.0'\n};\n\nremoteLoaderPreset({\n    remotes: {\n        default: componentsCoreRemote, 'components-core': componentsCoreRemote, 'components-iconfont': {\n            ...registry, remote: 'components-iconfont', defaultVersion: '0.1.8'\n        }, 'use-refer-navigate': process.env.NODE_ENV === 'development' ? {\n            remote: 'use-refer-navigate', url: '/', tpl: '{{url}}'\n        } : {\n            ...registry, remote: 'use-refer-navigate', defaultVersion: process.env.DEFAULT_VERSION\n        }\n    }\n});\n\nexport const ajax = (() => {\n    const instance = axios.create({\n        validateStatus: function () {\n            return true;\n        }\n    });\n\n    return (params) => {\n        if (params.hasOwnProperty('loader') && typeof params.loader === 'function') {\n            return Promise.resolve(params.loader(omit(params, ['loader']))).then((data) => ({\n                data: {\n                    code: 0, data\n                }\n            })).catch((err) => {\n                message.error(err.message || '请求发生错误');\n                return {data: {code: 500, msg: err.message}};\n            });\n        }\n        return instance(params);\n    };\n})();\n\n\nfetchPreset({\n    ajax,\n    loading: <Spin delay={500}\n                   style={{position: 'absolute', left: '50%', padding: '10px', transform: 'translateX(-50%)'}}/>,\n    error: null,\n    empty: <Empty/>,\n    transformResponse: (response) => {\n        const {data} = response;\n        response.data = {\n            code: data.code === 0 ? 200 : data.code, msg: data.msg, results: data.data\n        };\n        return response;\n    }\n});\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ preset, themeToken, ...props }) => {\n  return (\n      <HashRouter>\n        <ExampleRoutes\n            {...props}\n            paths={[\n              {\n                key: \"components\",\n                path: \"/\",\n                title: \"首页\",\n              },\n            ]}\n            preset={preset}\n            themeToken={themeToken}\n            readme={readme}\n            pageProps={{ menu: null }}\n        />\n      </HashRouter>\n  );\n};\n\nexport default App;\n","import { ajax } from \"./preset\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst themeToken = {\n  colorPrimary: \"#4F185A\",\n};\n\nroot.render(\n    <React.StrictMode>\n      <App preset={{ ajax }} themeToken={themeToken} />\n    </React.StrictMode>\n);\n","import * as component_1 from '@kne/current-lib_use-refer-navigate';\nconst readmeConfig = {\n    name: `use-refer-navigate`,\n    summary: `<p><code>use-refer-navigate</code> 是一个基于 React 和 React Router 的实用 Hook，用于在页面导航时自动携带 <code>referer</code> 参数。该 Hook 可以简化在单页应用（SPA）中跟踪页面来源的需求，特别适用于需要记录用户跳转路径的场景。</p>\n<h3>核心功能</h3>\n<ul>\n<li>自动从当前 URL 的查询参数中提取 <code>referer</code> 值</li>\n<li>在导航到新页面时，自动将 <code>referer</code> 参数附加到目标 URL</li>\n<li>保持与 React Router <code>useNavigate</code> 相同的 API 接口，便于集成</li>\n</ul>`,\n    description: `用于在页面导航时自动携带 referer 参数。该 Hook 可以简化在单页应用（SPA）中跟踪页面来源的需求，特别适用于需要记录用户跳转路径的场景。`,\n    packageName: `@kne/use-refer-navigate`,\n    api: `<h3><code>useReferNavigate()</code></h3>\n<p>返回一个增强版的 <code>navigate</code> 函数，签名与 React Router 的 <code>useNavigate</code> 相同。</p>\n<p><strong>参数继承自 React Router:</strong></p>\n<ul>\n<li><code>to: string | number</code> - 目标路径或历史堆栈中的 delta</li>\n<li><code>options: { replace?: boolean, state?: any }</code> - 导航选项</li>\n</ul>\n<p><strong>特殊行为:</strong></p>\n<ul>\n<li>如果当前 URL 有 <code>referer</code> 参数，会自动附加到所有相对路径导航中</li>\n<li>绝对 URL 和数字导航（历史回退）不受影响</li>\n</ul>`,\n    example: {\n        isFull: false,\n        className: `use_refer_navigate_762b3`,\n        style: `.use_refer_navigate_762b3 .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: useReferNavigate } = _UseReferNavigate;\n\nconst BaseExample = () => {\n  const navigate = useReferNavigate();\n\n  const handleClick = () => {\n    // 会自动携带 referer 参数\n    navigate('/target-page');\n  };\n\n  return <button onClick={handleClick}>Go to Target</button>;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_UseReferNavigate\",\n    packageName: \"@kne/current-lib_use-refer-navigate\",\n    importStatement: \"import * as _UseReferNavigate from \\\"@kne/use-refer-navigate\\\"\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n"],"names":["window","PUBLIC_URL","process","registry","url","tpl","componentsCoreRemote","_objectSpread","remote","defaultVersion","remoteLoaderPreset","remotes","default","ajax","instance","axios","validateStatus","params","hasOwnProperty","loader","Promise","resolve","omit","then","data","code","catch","err","message","error","msg","fetchPreset","loading","_jsx","Spin","delay","style","position","left","padding","transform","empty","Empty","transformResponse","response","results","ExampleRoutes","createEntry","_ref","preset","themeToken","props","_objectWithoutProperties","_excluded","HashRouter","children","paths","key","path","title","readme","pageProps","menu","ReactDOM","document","getElementById","render","React","App","colorPrimary","name","summary","description","packageName","api","example","isFull","className","list","scope","importStatement","component"],"sourceRoot":""}